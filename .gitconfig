[user]
  name = y_uuki
  email = yuki.tsubo@gmail.com
[color]
  status = auto
  ui = auto
  branch = auto
  interactive = auto
  grep = auto
[push]
  default = tracking
[core]
  editor = vim
  excludesfile = /Users/zac/.gitignore
  autocrlf = input
[grep]
  lineNumber = true
[alias]
  st = status
  sh = show
  so = remote show origin
  sb = show-branch -a
  st = !git status -s && git stash list | cat
  cfm = !git sb && git br && git st
  ft = fetch
  up = pull --rebase # pull rebase
  rbm = rebase master
  ad = add
  co = checkout
  # commit関連
  cm = commit
  ca = commit -a
  # branch関連
  br = branch
  brr = branch -r
  ba = branch -a           # originも含めた全てのbranchを表示
  bm = branch --merged     # merge済みのbranchを表示
  bn = branch --no-merged  # mergeしてないbranchを表示
  # log関連
  ls = log --stat
  lp = log -p
  la = log --pretty=\"format:%ad %h (%an): %s\" --date=short  # ざっくりログ出す
  lr = log origin          # originのlog
  lg = log --oneline --decorate --graph # branchとtagをgraph表示
  # diff関連
  dm = diff master         # masterとのdiff
  dc = diff --cached -M    # ファイル名変更時に無駄な差分を出力しない
  ds = diff --staged -M    # 同上(1.6.1移行)
  d1 = diff HEAD~          # HEADから1つ前とdiff
  d2 = diff HEAD~~         # HEADから2つ前とdiff
  # mergeの際にconflictが起きたファイルを編集
  edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
  # mergeの際にconflictが起きたファイルをadd
  add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
  # grep関連
  gr = grep
  gn = grep -n
  sed = ! git grep -z --full-name -l '.' | xargs -0 sed -i -e
  # stash関連
  ss = stash
  ssl = stash list
  sss = stash save
  ssp = stash pop
  # push/pull関連
  ps = push
  psom = push origin master
  pshm = push heroku master
  pl = pull
  # hub関連
  see = browse
